{
  "address": "0x0c28a1EF0ccdD15cFd82C291bb0873a283F86da1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stableReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_usdc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "stableReceiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Forward",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "forward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stableReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf060303c5bd10d3cbb1ceb1b2fb654a3dd230222a00af829d60f2697f5c26f0",
  "receipt": {
    "to": null,
    "from": "0x08C6fBA53BF2Ae19DBdC330E258B510c1C148e44",
    "contractAddress": "0x0c28a1EF0ccdD15cFd82C291bb0873a283F86da1",
    "transactionIndex": 1,
    "gasUsed": "244903",
    "logsBloom": "0x
    "blockHash": "0x05417d65e0fd2a4808512affa949a5181157806f0b033bbc2cf8c40b31ce0eff",
    "transactionHash": "0xcf060303c5bd10d3cbb1ceb1b2fb654a3dd230222a00af829d60f2697f5c26f0",
    "logs": [],
    "blockNumber": 5891573,
    "cumulativeGasUsed": "291804",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x08C6fBA53BF2Ae19DBdC330E258B510c1C148e44",
    "0x61b2b6Dd094272844c793E63B5aC3094Fe807C62"
  ],
  "numDeployments": 1,
  "solcInputHash": "6b6d1c4f209205c9b485fde6f9fe9999",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stableReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Forward\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"forward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"forward(address,uint256,address)\":{\"details\":\"4337 wallet approves USDC to this contract, then calls this function to forward the USDC to the stableReceiver\",\"params\":{\"amount\":\"The amount of USDC to forward\",\"sender\":\"The address that sent the USDC, usually the 4337 wallet\",\"to\":\"The address to send the USDC to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The owner of WrappedToken is the EdgelessDeposit contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BaseReceiver.sol\":\"BaseReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"src/BaseReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.23;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract BaseReceiver {\\n    address public stableReceiver;\\n    IERC20 public usdc;\\n\\n    event Forward(address indexed sender, address indexed stableReceiver, address indexed to, uint256 amount);\\n\\n    /**\\n     * @notice The owner of WrappedToken is the EdgelessDeposit contract\\n     */\\n    constructor(address _stableReceiver, IERC20 _usdc) {\\n        stableReceiver = _stableReceiver;\\n        usdc = _usdc;\\n    }\\n\\n    /**\\n     * @dev 4337 wallet approves USDC to this contract, then calls this function to forward the USDC to the\\n     * stableReceiver\\n     * @param sender The address that sent the USDC, usually the 4337 wallet\\n     * @param amount The amount of USDC to forward\\n     * @param to The address to send the USDC to\\n     */\\n    function forward(address sender, uint256 amount, address to) external {\\n        usdc.transferFrom(sender, address(this), amount);\\n        usdc.transfer(stableReceiver, amount);\\n        emit Forward(sender, stableReceiver, to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xc69186c837263e14403378800ba32b390705f0aeea5026dabc7054c48486f6ab\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161035b38038061035b83398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b61029a806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633e413bee14610046578063e6e55ae914610075578063f0c84ccb1461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100886100833660046101ff565b61009d565b005b600054610059906001600160a01b031681565b6001546040516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156100f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011a919061023b565b5060015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610194919061023b565b506000546040518381526001600160a01b0383811692811691908616907fe1c779fa040aac9bdf4ef4fecc590ef8ad7d9949bf5aa7579cf275b411d41f0a9060200160405180910390a4505050565b80356001600160a01b03811681146101fa57600080fd5b919050565b60008060006060848603121561021457600080fd5b61021d846101e3565b925060208401359150610232604085016101e3565b90509250925092565b60006020828403121561024d57600080fd5b8151801515811461025d57600080fd5b939250505056fea264697066735822122082e75a00c3f3844ceeb3b4168ea399a9135aebc05b4a42de0ca0ed9c425ebd0164736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633e413bee14610046578063e6e55ae914610075578063f0c84ccb1461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100886100833660046101ff565b61009d565b005b600054610059906001600160a01b031681565b6001546040516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156100f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011a919061023b565b5060015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610194919061023b565b506000546040518381526001600160a01b0383811692811691908616907fe1c779fa040aac9bdf4ef4fecc590ef8ad7d9949bf5aa7579cf275b411d41f0a9060200160405180910390a4505050565b80356001600160a01b03811681146101fa57600080fd5b919050565b60008060006060848603121561021457600080fd5b61021d846101e3565b925060208401359150610232604085016101e3565b90509250925092565b60006020828403121561024d57600080fd5b8151801515811461025d57600080fd5b939250505056fea264697066735822122082e75a00c3f3844ceeb3b4168ea399a9135aebc05b4a42de0ca0ed9c425ebd0164736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "forward(address,uint256,address)": {
        "details": "4337 wallet approves USDC to this contract, then calls this function to forward the USDC to the stableReceiver",
        "params": {
          "amount": "The amount of USDC to forward",
          "sender": "The address that sent the USDC, usually the 4337 wallet",
          "to": "The address to send the USDC to"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "The owner of WrappedToken is the EdgelessDeposit contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1423,
        "contract": "src/BaseReceiver.sol:BaseReceiver",
        "label": "stableReceiver",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1426,
        "contract": "src/BaseReceiver.sol:BaseReceiver",
        "label": "usdc",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1361"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1361": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}